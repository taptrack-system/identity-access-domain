#################################################################
# Lombok Configuration - Convenções corporativas
# Aplica-se a tod0 o projeto (pode ser sobrescrito em submódulos)
#################################################################

# Impede que config de diretórios acima seja herdada
config.stopBubbling = true

########################
# Código gerado
########################

# Marca todos os métodos/atributos gerados com @lombok.Generated
# Isso evita que ferramentas de cobertura (Jacoco, SonarQube) cobrem código Lombok
lombok.addLombokGeneratedAnnotation = true

# Getter/Setter seguem convenções JavaBeans
lombok.accessors.capitalization = beanspec

########################
# Regras de uso (flagUsage)
########################

# @Getter é permitido (mas poderia ser WARNING ou ERROR se o time preferir só getters manuais)
lombok.getter.flagUsage = ALLOW

# @Setter só com moderação (gera WARNING para incentivar imutabilidade)
lombok.setter.flagUsage = WARNING

# Proíbe o uso de @Data (considerado perigoso em projetos grandes, pois gera equals/hashCode/toString automaticamente)
lombok.data.flagUsage = ERROR

# Proíbe o uso de 'val' para evitar confusão em projetos corporativos
lombok.val.flagUsage = ERROR

# Proíbe o uso de 'var' (mesma razão que val)
lombok.var.flagUsage = ERROR

# @Builder é permitido, mas exige validação extra (pode ser WARNING se o time quiser forçar sempre com @Jacksonized, por exemplo)
lombok.builder.flagUsage = ALLOW

# Proíbe @Jacksonized para manter consistência (ou mudar para ALLOW se for padrão no time)
lombok.jacksonized.flagUsage = ERROR

########################
# Logs
########################

# Define SLF4J como padrão para todas as anotações de log (@Slf4j, @Log, etc.)
lombok.log.custom.declaration = org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger($TYPE.class);

########################
# Construtores
########################

# Gera construtor privado extra quando usar @NoArgsConstructor (útil para Hibernate e JPA)
lombok.noArgsConstructor.extraPrivate = true

# Evita que Lombok adicione @ConstructorProperties nos construtores (para evitar warnings em builds modernos)
lombok.anyConstructor.suppressConstructorProperties = true

########################
# Equals e HashCode
########################

# Se a classe tiver herança, equals/hashCode devem chamar super (garante consistência em entidades JPA)
lombok.equalsAndHashCode.callSuper = call
