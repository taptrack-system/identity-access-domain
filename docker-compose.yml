version: "3.9"

services:
  ########################################
  # MySQL (profile: mysql)
  ########################################
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    ports:
      - "${DB_MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_MYSQL_NAME}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASS}
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    profiles: ["mysql"]

  ########################################
  # PostgreSQL (profile: postgres)
  ########################################
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "${DB_POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_POSTGRES_NAME}
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles: ["postgres"]

  ########################################
  # MongoDB (profile: mongo)
  ########################################
  mongodb:
    image: mongo:6
    container_name: mongo_db
    restart: always
    ports:
      - "${DB_MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_DATABASE: ${DB_MONGO_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_MONGO_PASS}
    volumes:
      - mongo_data:/data/db
    profiles: ["mongo"]

  ########################################
  # Elasticsearch (profile: elastic)
  ########################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "${ELASTIC_PORT}:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    profiles: ["elastic"]

  ########################################
  # Identity Profiles Application
  ########################################
  identity-profiles:
    build:
      context: ./identity-profiles
      dockerfile: Dockerfile
    container_name: identity_profiles_app
    ports:
      - "${APP_PORT}:8081"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      JAVA_OPTS: ${JAVA_OPTS}
      # variáveis de conexão (apenas para referência, 
      # a aplicação decide qual usar via perfil ativo)
      # DB_MYSQL_HOST: mysql
      # DB_POSTGRES_HOST: postgres
      # DB_MONGO_HOST: mongodb
      # ELASTIC_HOST: elasticsearch

volumes:
  mysql_data:
  postgres_data:
  mongo_data:
  es_data:
